
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import luban.AbstractBean;


public final class GameLevel extends AbstractBean {
    public static final int __ID__ = -1307826542;
    /**
     * 这是id
     */
    public final int id;
    /**
     * 关卡类型<br/>1.普通关<br/>2.巅峰赛<br/>3.每日免费挑战<br/>4.每日广告挑战
     */
    public final int type;
    /**
     * 循环关卡ID
     */
    public final int loopId;
    /**
     * 初始
     */
    public final int initRate;
    /**
     * 基础，发一张牌 + baseRate。到100给连牌，然后-100，再累加
     */
    public final int baseRate;
    /**
     * 增加浮动值
     */
    public final java.util.ArrayList<Integer> floating;
    /**
     * 洗牌给的连牌数量，区间随机
     */
    public final java.util.ArrayList<Integer> linkNum;
    /**
     * 初始空位数量
     */
    public final int emptyNum;
    /**
     * 初始牌里有没有连牌
     */
    public final int initA;
    /**
     * 开始发A的轮次<br/>在n轮次后才开始发A
     */
    public final int beginRoundA;
    /**
     * 奖励鱼
     */
    public final int rewardFish;
    /**
     * 奖励
     */
    public final java.util.ArrayList<cfg.item.Reward1> reward;
    /**
     * 货币类型
     */
    public final int tokenId;
    /**
     * 奖励
     */
    public final int price;
    /**
     * 经验
     */
    public final int exp;
    public GameLevel(JsonObject _buf) {
        id = _buf.get("id").getAsInt();
        type = _buf.get("type").getAsInt();
        loopId = _buf.get("loopId").getAsInt();
        initRate = _buf.get("initRate").getAsInt();
        baseRate = _buf.get("baseRate").getAsInt();
        {
            com.google.gson.JsonArray _json0_ = _buf.get("floating").getAsJsonArray();
            floating = new java.util.ArrayList<Integer>(_json0_.size());
            for (JsonElement _e0 : _json0_) {
                int _v0;
                _v0 = _e0.getAsInt();
                floating.add(_v0);
            }
        }
        {
            com.google.gson.JsonArray _json0_ = _buf.get("linkNum").getAsJsonArray();
            linkNum = new java.util.ArrayList<Integer>(_json0_.size());
            for (JsonElement _e0 : _json0_) {
                int _v0;
                _v0 = _e0.getAsInt();
                linkNum.add(_v0);
            }
        }
        emptyNum = _buf.get("emptyNum").getAsInt();
        initA = _buf.get("initA").getAsInt();
        beginRoundA = _buf.get("beginRoundA").getAsInt();
        rewardFish = _buf.get("rewardFish").getAsInt();
        {
            com.google.gson.JsonArray _json0_ = _buf.get("reward").getAsJsonArray();
            reward = new java.util.ArrayList<cfg.item.Reward1>(_json0_.size());
            for (JsonElement _e0 : _json0_) {
                cfg.item.Reward1 _v0;
                _v0 = cfg.item.Reward1.deserialize(_e0.getAsJsonObject());
                reward.add(_v0);
            }
        }
        tokenId = _buf.get("tokenId").getAsInt();
        price = _buf.get("price").getAsInt();
        exp = _buf.get("exp").getAsInt();
    }

    public static GameLevel deserialize(JsonObject _buf) {
        return new GameLevel(_buf);
    }

    @Override
    public int getTypeId() {
        return __ID__;
    }

    @Override
    public String toString() {
        return "{ "
                + "(format_field_name __code_style field.name):" + id + ","
                + "(format_field_name __code_style field.name):" + type + ","
                + "(format_field_name __code_style field.name):" + loopId + ","
                + "(format_field_name __code_style field.name):" + initRate + ","
                + "(format_field_name __code_style field.name):" + baseRate + ","
                + "(format_field_name __code_style field.name):" + floating + ","
                + "(format_field_name __code_style field.name):" + linkNum + ","
                + "(format_field_name __code_style field.name):" + emptyNum + ","
                + "(format_field_name __code_style field.name):" + initA + ","
                + "(format_field_name __code_style field.name):" + beginRoundA + ","
                + "(format_field_name __code_style field.name):" + rewardFish + ","
                + "(format_field_name __code_style field.name):" + reward + ","
                + "(format_field_name __code_style field.name):" + tokenId + ","
                + "(format_field_name __code_style field.name):" + price + ","
                + "(format_field_name __code_style field.name):" + exp + ","
                + "}";
    }
}

